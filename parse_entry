#!/bin/bash

# Parse a bibliographical entry and tags it. Uses the data available in tags/

# The following function tries to isolate 'semantic entities' (i.e. blocks of
# text that have a meaning together) and to find them in the tags/* files.
#
# When that works, the bibliographical entry is tagged with the name of the
# tags/* file that matches.
#
#
# ====> THIS FUNCTION SHOULD BE *CLEAN*, i.e. NO F**** GUESSES HERE <====
#
# (it must work for *all* kins of keywords at once)
function auto_annotate_from_db() {
    #echo "$l" >&2
    l="$(echo "$*" | sed "s/ *, */, /g")"
    tags="$(echo "$l" | tr '0-9()' ', ' | grep -o -P "(\w[\w-]*\.* )*\w[\w-]*\.{0,1}" | # (Words can contain a '-', i.e. Addison-Wesley)
	while read l; do
	    grep -o -x -F "$l" tags/*
	done | sed "s/:/ /")"

    #echo "$l" | tr '0-9()' ', ' | grep -o -P "([\w\-]+\.* )*[\w-]+\.{0,1}" >&2
    if [ -n "$tags" ]; then
	while read tag content; do
	    tag="$(basename "$tag")"
            l="$(echo ${l}, | perl -ape "s/([,\(;] *)$content,/\1╠$tag=$content╣,/g")"
	done < <(echo "$tags")
    fi
    echo $l
}

# Specific function to guess the journal's name. We must try harder, for journal
# names contain lots of '.', and sometimes appear right after the '.' at the end
# of the title.
function parse_journal_from_db() {
    j="$(echo "$*," | tr '0-9()' ',' | sed 's/ *, */, /g' | grep -F -f /tmp/journals_patterns -o | sed "s/^[ ,\.]*//" | sed "s/,$//")"
    test $? -eq 0 || exit 1
    if [ -z "$j" ]; then
	echo "$*"
    else
	echo "$*" | perl -ape "s/$j/, ╠journal=$j╣,/g"
    fi
}



cat |
    perl -ape "s/ (Pages|pages|p\.*p\.*|pp|p\.|p|pp\.)* *([0-9]+)[-–]+([0-9]+)/,\. ╠pages=\2–\3╣,/g" |
    perl -ape "s/ ([0-9]+)\(([0-9]+)\):([0-9]{4})[–-]{1,3}([0-9]+)/, ╠vol=\1╣, ╠issue=\2╣, ╠pages=\3–\4╣, /" | # 52(12):1491–1552
    perl -ape "s/ ([0-9]+):([0-9]+)[–-]{1,3}([0-9]+)/, ╠vol=\1╣, ╠pages=\2–\3╣, /" |  # 3:131–150
    perl -ape "s/ [Vv]ol[\. ]*([0-9]+)/,\. ╠vol=\1╣, /g" |
    perl -ape "s/ n[o\.]{0,2} *([0-9]+)/, ╠issue=\1╣, /g" |
    perl -ape "s/ ([0-9]+)pp\.*/, ╠numpages=\1╣, /g" |
    perl -ape "s/\(((19|20)[0-9]{2})\)/,\.╠year=\1╣, /g" |
    perl -ape "s/[,\.]+ *((19|20)[0-9]{2})([,\)\. *]+)/, ╠year=\1╣, \3 /g" |
    perl -ape "s/[Tt]o [Aa]ppear( in)* *[:;\.]*/, ╠to_appear╣, /g" |

    # Inserts , around numbers !!! Can wreck the title.
    perl -ape 's/ ([0-9])/, \1/g' |
    while read l; do auto_annotate_from_db "$l"; done |
    perl -ape "s/(╠journal=[^╣]*╣)[, ]*([0-9]+)[ ,\.]/\1, ╠vol=\2╣, /g" |
    cat
